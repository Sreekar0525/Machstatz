[{"D:\\react\\planet\\src\\index.js":"1","D:\\react\\planet\\src\\reportWebVitals.js":"2","D:\\react\\planet\\src\\App.js":"3","D:\\react\\planet\\src\\components\\Header.js":"4","D:\\react\\planet\\src\\components\\Home.js":"5","D:\\react\\planet\\src\\reusables\\PlanetCard.js":"6"},{"size":500,"mtime":1608878696562,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1608878696623,"results":"9","hashOfConfig":"8"},{"size":227,"mtime":1608878696480,"results":"10","hashOfConfig":"8"},{"size":235,"mtime":1608878696763,"results":"11","hashOfConfig":"8"},{"size":6471,"mtime":1608878696795,"results":"12","hashOfConfig":"8"},{"size":717,"mtime":1608878696810,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"czah00",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\react\\planet\\src\\index.js",[],["28","29"],"D:\\react\\planet\\src\\reportWebVitals.js",[],"D:\\react\\planet\\src\\App.js",[],"D:\\react\\planet\\src\\components\\Header.js",[],"D:\\react\\planet\\src\\components\\Home.js",["30","31","32","33","34"],"import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"../assets/styles/Home.css\";\r\nimport PlanetCard from \"../reusables/PlanetCard\";\r\n\r\nconst planetsource = [\r\n  { id: \"mercury\", isFavourite: false, name: \"Mercury\" },\r\n  { id: \"venus\", isFavourite: false, name: \"Venus\" },\r\n  { id: \"earth\", isFavourite: false, name: \"Earth\" },\r\n  { id: \"mars\", isFavourite: false, name: \"Mars\" },\r\n  { id: \"ceres\", isFavourite: false, name: \"Ceres\" },\r\n  { id: \"jupiter\", isFavourite: false, name: \"Jupiter\" },\r\n  { id: \"saturn\", isFavourite: false, name: \"Saturn\" },\r\n  { id: \"pluto\", isFavourite: false, name: \"Pluto\" },\r\n  { id: \"haumea\", isFavourite: false, name: \"Haumea\" },\r\n  { id: \"makemake\", isFavourite: false, name: \"Makemake\" },\r\n  { id: \"eris\", isFavourite: false, name: \"Eris\" },\r\n];\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedTab: \"planets\",\r\n      cardtype: \"grid\",\r\n      sortby: \"\",\r\n      planetData: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ planetData: planetsource });\r\n  }\r\n\r\n  markAllasFav = () => {\r\n    const { planetData } = this.state;\r\n    let obj = planetData;\r\n    obj.map((item) => {\r\n      item.isFavourite = true;\r\n    });\r\n\r\n    this.setState({ planetData: obj });\r\n  };\r\n\r\n  delAllfromFav = () => {\r\n    const { planetData } = this.state;\r\n    let obj = planetData;\r\n    obj.map((item) => {\r\n      item.isFavourite = false;\r\n    });\r\n\r\n    this.setState({ planetData: obj });\r\n  };\r\n\r\n  markAsFav = (id) => {\r\n    const { planetData } = this.state;\r\n    let obj = planetData;\r\n    obj.map((item) => {\r\n      if (item.id === id) {\r\n        item.isFavourite = true;\r\n      }\r\n    });\r\n    this.setState({ planetData: obj });\r\n  };\r\n\r\n  delFromFav = (id) => {\r\n    const { planetData } = this.state;\r\n    let obj = planetData;\r\n    obj.map((item) => {\r\n      if (item.id === id) {\r\n        item.isFavourite = false;\r\n      }\r\n    });\r\n    this.setState({ planetData: obj });\r\n  };\r\n\r\n  render() {\r\n    const { planetData, selectedTab, cardtype, sortby } = this.state;\r\n\r\n    let planetInfo;\r\n\r\n    if (selectedTab === \"favourites\") {\r\n      planetInfo = planetData.filter((planet) => planet.isFavourite);\r\n    } else {\r\n      if (sortby === \"asec\") {\r\n        planetInfo = planetData.sort((a, b) =>\r\n          a.name > b.name ? 1 : b.name > a.name ? -1 : 0\r\n        );\r\n      } else if (sortby === \"desc\") {\r\n        planetInfo = planetData.sort((a, b) =>\r\n          a.name < b.name ? 1 : b.name < a.name ? -1 : 0\r\n        );\r\n      } else {\r\n        planetInfo = planetData;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"home-component\">\r\n        <div className=\"home-tab-row\">\r\n          <div\r\n            className=\"home-tab-option\"\r\n            style={\r\n              selectedTab === \"planets\"\r\n                ? { \"border-bottom\": \"2px solid white\" }\r\n                : null\r\n            }\r\n            onClick={() => {\r\n              if (selectedTab !== \"planets\") {\r\n                this.setState({ selectedTab: \"planets\" });\r\n              }\r\n            }}\r\n          >\r\n            Planets\r\n          </div>\r\n          <div\r\n            className=\"home-tab-option\"\r\n            style={\r\n              selectedTab === \"favourites\"\r\n                ? { \"border-bottom\": \"2px solid white\" }\r\n                : null\r\n            }\r\n            onClick={() => {\r\n              if (selectedTab !== \"favourites\") {\r\n                this.setState({ selectedTab: \"favourites\" });\r\n              }\r\n            }}\r\n          >\r\n            Favourites\r\n          </div>\r\n        </div>\r\n        {selectedTab === \"planets\" ? (\r\n          <div className=\"help-row\">\r\n            <div className=\"left-part\">\r\n              <div className=\"mark-buttons\" onClick={() => this.markAllasFav()}>\r\n                {\" \"}\r\n                + Mark all{\" \"}\r\n              </div>\r\n              <div\r\n                className=\"mark-buttons\"\r\n                onClick={() => this.delAllfromFav()}\r\n              >\r\n                {\" \"}\r\n                - Remove all{\" \"}\r\n              </div>\r\n            </div>\r\n            <div className=\"right-part\">\r\n              <div className=\"sort-box\">\r\n                <div>Sort :</div>\r\n                <div\r\n                  onClick={() => {\r\n                    if (sortby !== \"asec\") {\r\n                      this.setState({ sortby: \"asec\" });\r\n                    }\r\n                  }}\r\n                  className=\"pointer-class\"\r\n                >\r\n                  {\" \"}\r\n                  asec{\" \"}\r\n                </div>\r\n                <div\r\n                  onClick={() => {\r\n                    if (sortby !== \"desc\") {\r\n                      this.setState({ sortby: \"desc\" });\r\n                    }\r\n                  }}\r\n                  className=\"pointer-class\"\r\n                >\r\n                  {\" \"}\r\n                  desc{\" \"}\r\n                </div>\r\n              </div>\r\n              <div className=\"icon-type-selector\">\r\n                <div\r\n                  onClick={() => {\r\n                    if (cardtype !== \"grid\") {\r\n                      this.setState({ cardtype: \"grid\" });\r\n                    }\r\n                  }}\r\n                  className=\"pointer-class\"\r\n                >\r\n                  G\r\n                </div>\r\n                <div className=\"horizontal-bar\"> </div>\r\n                <div\r\n                  onClick={() => {\r\n                    if (cardtype !== \"list\") {\r\n                      this.setState({ cardtype: \"list\" });\r\n                    }\r\n                  }}\r\n                  className=\"pointer-class\"\r\n                >\r\n                  L\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n\r\n        <div className=\"content-area\">\r\n          {selectedTab === \"planets\" ? (\r\n            planetInfo.map((planet) => (\r\n              <PlanetCard\r\n                item={planet}\r\n                cardtype={cardtype}\r\n                addasFav={this.markAsFav}\r\n                removeasFav={this.delFromFav}\r\n              />\r\n            ))\r\n          ) : planetInfo.length ? (\r\n            planetInfo.map((planet) => (\r\n              <div className=\"favourite-card\">{planet.name}</div>\r\n            ))\r\n          ) : (\r\n            <h4> Please add favourites </h4>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","D:\\react\\planet\\src\\reusables\\PlanetCard.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":2,"column":8,"nodeType":"41","messageId":"42","endLine":2,"endColumn":16},{"ruleId":"43","severity":1,"message":"44","line":39,"column":20,"nodeType":"45","messageId":"46","endLine":39,"endColumn":22},{"ruleId":"43","severity":1,"message":"44","line":49,"column":20,"nodeType":"45","messageId":"46","endLine":49,"endColumn":22},{"ruleId":"43","severity":1,"message":"44","line":59,"column":20,"nodeType":"45","messageId":"46","endLine":59,"endColumn":22},{"ruleId":"43","severity":1,"message":"44","line":70,"column":20,"nodeType":"45","messageId":"46","endLine":70,"endColumn":22},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]