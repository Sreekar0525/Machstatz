{"version":3,"sources":["reusables/PlanetCard.js","components/Home.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["PlanetCard","props","cardClass","cardtype","item","addasFav","removeasFav","className","name","isFavourite","onClick","id","planetsource","Home","markAllasFav","obj","state","planetData","map","setState","delAllfromFav","markAsFav","delFromFav","selectedTab","sortby","this","planetInfo","filter","planet","sort","a","b","style","length","Component","Header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAkCeA,MA9Bf,SAAoBC,GAAQ,IAGtBC,EAFIC,EAA0CF,EAA1CE,SAAUC,EAAgCH,EAAhCG,KAAMC,EAA0BJ,EAA1BI,SAAUC,EAAgBL,EAAhBK,YAUlC,OALEJ,EADe,SAAbC,EACU,YAEA,YAIZ,sBAAKI,UAAWL,EAAhB,UACGE,EAAKI,KACLJ,EAAKK,YACJ,qBACEF,UAAU,uBACVG,QAAS,kBAAMJ,EAAYF,EAAKO,KAFlC,eAOA,qBAAKJ,UAAU,oBAAoBG,QAAS,kBAAML,EAASD,EAAKO,KAAhE,mBCpBFC,EAAe,CACnB,CAAED,GAAI,UAAWF,aAAa,EAAOD,KAAM,WAC3C,CAAEG,GAAI,QAASF,aAAa,EAAOD,KAAM,SACzC,CAAEG,GAAI,QAASF,aAAa,EAAOD,KAAM,SACzC,CAAEG,GAAI,OAAQF,aAAa,EAAOD,KAAM,QACxC,CAAEG,GAAI,QAASF,aAAa,EAAOD,KAAM,SACzC,CAAEG,GAAI,UAAWF,aAAa,EAAOD,KAAM,WAC3C,CAAEG,GAAI,SAAUF,aAAa,EAAOD,KAAM,UAC1C,CAAEG,GAAI,QAASF,aAAa,EAAOD,KAAM,SACzC,CAAEG,GAAI,SAAUF,aAAa,EAAOD,KAAM,UAC1C,CAAEG,GAAI,WAAYF,aAAa,EAAOD,KAAM,YAC5C,CAAEG,GAAI,OAAQF,aAAa,EAAOD,KAAM,SA8M3BK,E,kDA1Mb,WAAYZ,GAAQ,IAAD,8BACjB,cAAMA,IAaRa,aAAe,WAAO,IAEhBC,EADmB,EAAKC,MAApBC,WAERF,EAAIG,KAAI,SAACd,GACPA,EAAKK,aAAc,KAGrB,EAAKU,SAAS,CAAEF,WAAYF,KArBX,EAwBnBK,cAAgB,WAAO,IAEjBL,EADmB,EAAKC,MAApBC,WAERF,EAAIG,KAAI,SAACd,GACPA,EAAKK,aAAc,KAGrB,EAAKU,SAAS,CAAEF,WAAYF,KA/BX,EAkCnBM,UAAY,SAACV,GAAQ,IAEfI,EADmB,EAAKC,MAApBC,WAERF,EAAIG,KAAI,SAACd,GACHA,EAAKO,KAAOA,IACdP,EAAKK,aAAc,MAGvB,EAAKU,SAAS,CAAEF,WAAYF,KA1CX,EA6CnBO,WAAa,SAACX,GAAQ,IAEhBI,EADmB,EAAKC,MAApBC,WAERF,EAAIG,KAAI,SAACd,GACHA,EAAKO,KAAOA,IACdP,EAAKK,aAAc,MAGvB,EAAKU,SAAS,CAAEF,WAAYF,KAnD5B,EAAKC,MAAQ,CACXO,YAAa,UACbpB,SAAU,OACVqB,OAAQ,GACRP,WAAY,IANG,E,gEAWjBQ,KAAKN,SAAS,CAAEF,WAAYL,M,+BA6CpB,IAGJc,EAHG,SAC+CD,KAAKT,MAAnDC,EADD,EACCA,WAAYM,EADb,EACaA,YAAapB,EAD1B,EAC0BA,SAAUqB,EADpC,EACoCA,OAoB3C,OAfEE,EADkB,eAAhBH,EACWN,EAAWU,QAAO,SAACC,GAAD,OAAYA,EAAOnB,eAEnC,SAAXe,EACWP,EAAWY,MAAK,SAACC,EAAGC,GAAJ,OAC3BD,EAAEtB,KAAOuB,EAAEvB,KAAO,EAAIuB,EAAEvB,KAAOsB,EAAEtB,MAAQ,EAAI,KAE3B,SAAXgB,EACIP,EAAWY,MAAK,SAACC,EAAGC,GAAJ,OAC3BD,EAAEtB,KAAOuB,EAAEvB,KAAO,EAAIuB,EAAEvB,KAAOsB,EAAEtB,MAAQ,EAAI,KAGlCS,EAKf,sBAAKV,UAAU,iBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBACEA,UAAU,kBACVyB,MACkB,YAAhBT,EACI,CAAE,gBAAiB,mBACnB,KAENb,QAAS,WACa,YAAhBa,GACF,EAAKJ,SAAS,CAAEI,YAAa,aATnC,qBAeA,qBACEhB,UAAU,kBACVyB,MACkB,eAAhBT,EACI,CAAE,gBAAiB,mBACnB,KAENb,QAAS,WACa,eAAhBa,GACF,EAAKJ,SAAS,CAAEI,YAAa,gBATnC,2BAgBe,YAAhBA,EACC,sBAAKhB,UAAU,WAAf,UACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,eAAeG,QAAS,kBAAM,EAAKI,gBAAlD,UACG,IADH,aAEa,OAEb,sBACEP,UAAU,eACVG,QAAS,kBAAM,EAAKU,iBAFtB,UAIG,IAJH,eAKe,UAGjB,sBAAKb,UAAU,aAAf,UACE,sBAAKA,UAAU,WAAf,UACE,yCACA,sBACEG,QAAS,WACQ,SAAXc,GACF,EAAKL,SAAS,CAAEK,OAAQ,UAG5BjB,UAAU,gBANZ,UAQG,IARH,OASO,OAEP,sBACEG,QAAS,WACQ,SAAXc,GACF,EAAKL,SAAS,CAAEK,OAAQ,UAG5BjB,UAAU,gBANZ,UAQG,IARH,OASO,UAGT,sBAAKA,UAAU,qBAAf,UACE,qBACEG,QAAS,WACU,SAAbP,GACF,EAAKgB,SAAS,CAAEhB,SAAU,UAG9BI,UAAU,gBANZ,eAUA,qBAAKA,UAAU,iBAAf,eACA,qBACEG,QAAS,WACU,SAAbP,GACF,EAAKgB,SAAS,CAAEhB,SAAU,UAG9BI,UAAU,gBANZ,wBAaJ,KAEJ,qBAAKA,UAAU,eAAf,SACmB,YAAhBgB,EACCG,EAAWR,KAAI,SAACU,GAAD,OACb,cAAC,EAAD,CACExB,KAAMwB,EACNzB,SAAUA,EACVE,SAAU,EAAKgB,UACff,YAAa,EAAKgB,gBAGpBI,EAAWO,OACbP,EAAWR,KAAI,SAACU,GAAD,OACb,qBAAKrB,UAAU,iBAAf,SAAiCqB,EAAOpB,UAG1C,kE,GAnMO0B,a,MCRJC,MARf,WACE,OACE,qBAAK5B,UAAU,SAAf,SACE,qBAAKA,UAAU,cAAf,8BCOS6B,MATf,WACE,OACE,sBAAK7B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCGS8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1cbcf242.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"../assets/styles/PlanetCard.css\";\r\n\r\nfunction PlanetCard(props) {\r\n  const { cardtype, item, addasFav, removeasFav } = props;\r\n\r\n  let cardClass;\r\n\r\n  if (cardtype === \"grid\") {\r\n    cardClass = \"grid-card\";\r\n  } else {\r\n    cardClass = \"list-card\";\r\n  }\r\n\r\n  return (\r\n    <div className={cardClass}>\r\n      {item.name}\r\n      {item.isFavourite ? (\r\n        <div\r\n          className=\"floating-remove-icon\"\r\n          onClick={() => removeasFav(item.id)}\r\n        >\r\n          -\r\n        </div>\r\n      ) : (\r\n        <div className=\"floating-add-icon\" onClick={() => addasFav(item.id)}>\r\n          +\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlanetCard;\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"../assets/styles/Home.css\";\r\nimport PlanetCard from \"../reusables/PlanetCard\";\r\n\r\nconst planetsource = [\r\n  { id: \"mercury\", isFavourite: false, name: \"Mercury\" },\r\n  { id: \"venus\", isFavourite: false, name: \"Venus\" },\r\n  { id: \"earth\", isFavourite: false, name: \"Earth\" },\r\n  { id: \"mars\", isFavourite: false, name: \"Mars\" },\r\n  { id: \"ceres\", isFavourite: false, name: \"Ceres\" },\r\n  { id: \"jupiter\", isFavourite: false, name: \"Jupiter\" },\r\n  { id: \"saturn\", isFavourite: false, name: \"Saturn\" },\r\n  { id: \"pluto\", isFavourite: false, name: \"Pluto\" },\r\n  { id: \"haumea\", isFavourite: false, name: \"Haumea\" },\r\n  { id: \"makemake\", isFavourite: false, name: \"Makemake\" },\r\n  { id: \"eris\", isFavourite: false, name: \"Eris\" },\r\n];\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedTab: \"planets\",\r\n      cardtype: \"grid\",\r\n      sortby: \"\",\r\n      planetData: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ planetData: planetsource });\r\n  }\r\n\r\n  markAllasFav = () => {\r\n    const { planetData } = this.state;\r\n    let obj = planetData;\r\n    obj.map((item) => {\r\n      item.isFavourite = true;\r\n    });\r\n\r\n    this.setState({ planetData: obj });\r\n  };\r\n\r\n  delAllfromFav = () => {\r\n    const { planetData } = this.state;\r\n    let obj = planetData;\r\n    obj.map((item) => {\r\n      item.isFavourite = false;\r\n    });\r\n\r\n    this.setState({ planetData: obj });\r\n  };\r\n\r\n  markAsFav = (id) => {\r\n    const { planetData } = this.state;\r\n    let obj = planetData;\r\n    obj.map((item) => {\r\n      if (item.id === id) {\r\n        item.isFavourite = true;\r\n      }\r\n    });\r\n    this.setState({ planetData: obj });\r\n  };\r\n\r\n  delFromFav = (id) => {\r\n    const { planetData } = this.state;\r\n    let obj = planetData;\r\n    obj.map((item) => {\r\n      if (item.id === id) {\r\n        item.isFavourite = false;\r\n      }\r\n    });\r\n    this.setState({ planetData: obj });\r\n  };\r\n\r\n  render() {\r\n    const { planetData, selectedTab, cardtype, sortby } = this.state;\r\n\r\n    let planetInfo;\r\n\r\n    if (selectedTab === \"favourites\") {\r\n      planetInfo = planetData.filter((planet) => planet.isFavourite);\r\n    } else {\r\n      if (sortby === \"asec\") {\r\n        planetInfo = planetData.sort((a, b) =>\r\n          a.name > b.name ? 1 : b.name > a.name ? -1 : 0\r\n        );\r\n      } else if (sortby === \"desc\") {\r\n        planetInfo = planetData.sort((a, b) =>\r\n          a.name < b.name ? 1 : b.name < a.name ? -1 : 0\r\n        );\r\n      } else {\r\n        planetInfo = planetData;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"home-component\">\r\n        <div className=\"home-tab-row\">\r\n          <div\r\n            className=\"home-tab-option\"\r\n            style={\r\n              selectedTab === \"planets\"\r\n                ? { \"border-bottom\": \"2px solid white\" }\r\n                : null\r\n            }\r\n            onClick={() => {\r\n              if (selectedTab !== \"planets\") {\r\n                this.setState({ selectedTab: \"planets\" });\r\n              }\r\n            }}\r\n          >\r\n            Planets\r\n          </div>\r\n          <div\r\n            className=\"home-tab-option\"\r\n            style={\r\n              selectedTab === \"favourites\"\r\n                ? { \"border-bottom\": \"2px solid white\" }\r\n                : null\r\n            }\r\n            onClick={() => {\r\n              if (selectedTab !== \"favourites\") {\r\n                this.setState({ selectedTab: \"favourites\" });\r\n              }\r\n            }}\r\n          >\r\n            Favourites\r\n          </div>\r\n        </div>\r\n        {selectedTab === \"planets\" ? (\r\n          <div className=\"help-row\">\r\n            <div className=\"left-part\">\r\n              <div className=\"mark-buttons\" onClick={() => this.markAllasFav()}>\r\n                {\" \"}\r\n                + Mark all{\" \"}\r\n              </div>\r\n              <div\r\n                className=\"mark-buttons\"\r\n                onClick={() => this.delAllfromFav()}\r\n              >\r\n                {\" \"}\r\n                - Remove all{\" \"}\r\n              </div>\r\n            </div>\r\n            <div className=\"right-part\">\r\n              <div className=\"sort-box\">\r\n                <div>Sort :</div>\r\n                <div\r\n                  onClick={() => {\r\n                    if (sortby !== \"asec\") {\r\n                      this.setState({ sortby: \"asec\" });\r\n                    }\r\n                  }}\r\n                  className=\"pointer-class\"\r\n                >\r\n                  {\" \"}\r\n                  asec{\" \"}\r\n                </div>\r\n                <div\r\n                  onClick={() => {\r\n                    if (sortby !== \"desc\") {\r\n                      this.setState({ sortby: \"desc\" });\r\n                    }\r\n                  }}\r\n                  className=\"pointer-class\"\r\n                >\r\n                  {\" \"}\r\n                  desc{\" \"}\r\n                </div>\r\n              </div>\r\n              <div className=\"icon-type-selector\">\r\n                <div\r\n                  onClick={() => {\r\n                    if (cardtype !== \"grid\") {\r\n                      this.setState({ cardtype: \"grid\" });\r\n                    }\r\n                  }}\r\n                  className=\"pointer-class\"\r\n                >\r\n                  G\r\n                </div>\r\n                <div className=\"horizontal-bar\"> </div>\r\n                <div\r\n                  onClick={() => {\r\n                    if (cardtype !== \"list\") {\r\n                      this.setState({ cardtype: \"list\" });\r\n                    }\r\n                  }}\r\n                  className=\"pointer-class\"\r\n                >\r\n                  L\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n\r\n        <div className=\"content-area\">\r\n          {selectedTab === \"planets\" ? (\r\n            planetInfo.map((planet) => (\r\n              <PlanetCard\r\n                item={planet}\r\n                cardtype={cardtype}\r\n                addasFav={this.markAsFav}\r\n                removeasFav={this.delFromFav}\r\n              />\r\n            ))\r\n          ) : planetInfo.length ? (\r\n            planetInfo.map((planet) => (\r\n              <div className=\"favourite-card\">{planet.name}</div>\r\n            ))\r\n          ) : (\r\n            <h4> Please add favourites </h4>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nimport '../assets/styles/Header.css';\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"Header\">\r\n      <div className='header-text'>Our Universe </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import \"./App.css\";\n\nimport Home from \"./components/Home\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}